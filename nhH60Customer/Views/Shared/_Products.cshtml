@model nhH60Customer.Dtos.ProductDTO
@inject nhH60Customer.Models.FormattingService DisplayFormat

<div class="card">
    <div class="card-body">
        <h5 class="card-title">@Model.Description</h5>
        <p class="card-text">
            @if (Model.SellPrice == null) {
                <span>No Sell Price Yet</span>
            } else {
                <span>@DisplayFormat.CurrencyFormat(Convert.ToDouble(@Model.SellPrice))</span>
            }
            <br />
            @if (Model.Stock == null) {
                <span class="text-danger" id="outOfStock">Out of stock</span>
            } else {
                <span class="text-success" id="inStock">In stock</span>
                @using (Html.BeginForm()) {

                    @Html.LabelFor(x => x.ProductId, new { @class = "d-none" })
                    @Html.EditorFor(x => x.ProductId, new { htmlAttributes = new { @class = "d-none" } })

                    <label for="@Model.Stock">Quantity:</label>
                    @Html.DropDownListFor(m => m.Stock, Enumerable.Range(1, Convert.ToInt32(Model.Stock)).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }))
                    <br />
                    <input type="submit" value="Add" class="submitBtn btn btn-info" id="addToStock" />
                }
            }
        </p>
        @*Image Sources:
            https://icons.getbootstrap.com/icons/pencil/
            https://icons.getbootstrap.com/icons/eye/
            https://icons.getbootstrap.com/icons/trash/*@
    </div>
</div>